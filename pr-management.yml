name: PR Metadata Management

on:
  pull_request:
    types: [opened, reopened, edited, synchronize]

permissions:
  contents: read
  pull-requests: write

jobs:
  pr-meta:
    runs-on: ubuntu-latest

    steps:
      # --- Step 1: Checkout templates folder ---
      - name: Checkout template folder
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .github/pr-templates/
          sparse-checkout-cone-mode: false

      # --- Step 2: Apply PR Template only if body is empty ---
      - name: Apply PR Template if body empty
        if: github.event.pull_request.body == '' && github.actor != 'github-actions[bot]'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const pr = context.payload.pull_request;
            const branch = pr.head.ref;

            let templatePath = '.github/pr-templates/default.md';
            if (branch.startsWith('feature/')) templatePath = '.github/pr-templates/feature.md';
            else if (branch.startsWith('bugfix/')) templatePath = '.github/pr-templates/bugfix.md';
            else if (branch.startsWith('release/')) templatePath = '.github/pr-templates/release.md';
            else if (branch.startsWith('hotfix/')) templatePath = '.github/pr-templates/hotfix.md';

            const body = fs.readFileSync(templatePath, 'utf8')
              .replace(/\${{AUTHOR}}/g, context.actor);

            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number,
              body
            });

      # --- Step 3: Auto-label by branch type ---
      - name: Add label based on branch
        if: github.actor != 'github-actions[bot]'
        uses: actions-ecosystem/action-add-labels@v1
        with:
          labels: |
            ${{ startsWith(github.head_ref, 'feature/') && 'feature' || '' }}
            ${{ startsWith(github.head_ref, 'bugfix/') && 'bugfix' || '' }}
            ${{ startsWith(github.head_ref, 'release/') && 'release' || '' }}
            ${{ startsWith(github.head_ref, 'hotfix/') && 'hotfix' || '' }}

      # --- Step 4: Validate PR title ---
      - name: Validate PR Title
        if: github.actor != 'github-actions[bot]'
        uses: actions/github-script@v7
        with:
          script: |
            const title = context.payload.pull_request.title;
            const pattern = /^\[[A-Z]+-\d+\]/; // Example: [JIRA-123] Add endpoint
            if (!pattern.test(title)) {
              core.setFailed(`❌ Invalid PR title format: '${title}'. Expected format: [JIRA-123] Short description`);
            } else {
              console.log(`✅ Title is valid: ${title}`);
            }

      # --- Step 5: Label PR size ---
      - name: Label PR by size
        uses: pascalgn/size-label-action@v0.5.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          IGNORED: "package-lock.json, yarn.lock, dist/**, build/**"
          XS: 20
          S: 100
          M: 300
          L: 1000
          XL: 2000